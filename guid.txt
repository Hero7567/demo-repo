Complete Competitive Programming & DSA guide that i followed during my placement

Hey, I (21M) am currently working as a Software Developer. I've been getting lots and lots of DMs regarding how do I get a job, how i prepared for it and queries regarding that. I'll try to cover maximum such questions here in this post.

A little about me -> I did my B-Tech from a Tier 1 college and i used to teach my juniors Competitive Programming and DSA there (completely free), and these all resources, list and advices are just a compilation of what all i learnt throughout my teaching journey.

My advice to everyone in their 1st/2nd year is become good at competitive programming(CP) rather than just focusing on basic DSA. DSA is just a small portion of questions/topics, CP trains your mind how to think when a certain problem arises, this is exactly what big IT companies look for, the ability to find effective and efficient solution to new problems quickly. DSA is just a some certain pattern of questions that are most frequently asked, but if you have a good grip on CP, solving DSA problems will not be a big deal for you.

My recommendation would be start with *C++ language*, as its the most preferred language in CP/DSA

So now coming to the topics/roadmap that i covered, i started CP from my 2nd semester of Btech.  
You can start from

*LUV C++ youtube channel -> The best resource for CP* watch the entire video thoroughly and practice the questions given in description. Practice similar questions on *HackerEarth, Codeforces, Codechef*  
Cover all the topics from his playlist, this is the bare minimum.

The following topics are very important with respect to placements and interviews, so along with LUV C++ playlist you need to cover them from a lot of other resources

*Dynamic Programming* -> In addition to Luv C++, go through *ADITYA VERMA's DP PLAYLIST* and practice a lot a lot of questions of Dynamic Programming

*Graphs* -> Go through *CODE N CODE's Graph Playlist* 1 & 2 (1 is a must do) and practice a lot a lot of questions of Graphs

*Binary Search* -> Go through *CODEFORCES EDU* videos and try to solve the practice questions yourself

*Two Pointers* -> Go through *CODEFORCES EDU* videos and try to solve the practice questions yourself

*SegTree, Lazy Propagation, Binary Lifting, LCA* (very advanced topics only asked in top companies) -> *CODE N CODE*

*Fenwick Tree* -> *LUV C++* (old videos where he explained everything on the whiteboard)

*DSU* -> *LUV C++* and *STRIVER* *(TAKE U FORWARD)*

Don't just focus on covering these topics, try to learn how to approach a new problem cause most big companies will be asking you questions that have never been asked before and you should know how to approach them.

*THROUGHOUT THE JOURNEY OF LEARNING THESE CONCEPTS, TRY TO GIVE AS MUCH CONTESTS AS YOU CAN, ON CODEFORCES, CODECHEF wherever you can*

*THERE IS NO BETTER WAY OF LEARNING HOW TO THINK THAN TO GIVE CONTESTS, after each contest try to solve atleast one more question that you were not able to solve in the contest.(UP-SOLVING)*

*--------------------------     DSA ROUTE     ------------------------------------*
If you just want to go through DSA (3rd year) quickly, and dont want to follow the CP route, just go through these topics and do them thoroughly. But as it's just a shortcut, so don't expect the results to be same as the ones you ll be getting after following the CP route.

*PREFER CP ROUTE IF YOU HAVE TIME*

Those who have already gone through the CP route, these topics below will not take much time and you can quickly wrap up on them in 3 months. Just practice their questions on *LEETCODE* and you ll be a DSA GOD

1. Arrays (Questions Practice)
2. Strings Algorithm (Striver + CodeNCode)
   1. *KMP, **Rabin Karp (must)*
3. Maths (Questions Practice)
   1. Number Theory, Combinatorics
4. Binary Search (Codeforces EDU + Luv C++ Yt)
5. Bit Manipulation (Questions Practice)
6. Two Pointers (Codeforces EDU)
7. Linked List (Striver)
8. Stack & Queues (Striver)
9. Recursion & Backtracking (Striver)
10. Hashing (Questions Practice)
11. Heaps & Maps (Striver + Aditya Verma for Heaps)
12. Binary Tree & BST (Striver)
13. DP & dp with bitmasking (Aditya Verma + Striver DP playlist)
14. Graphs (CodeNCode + Striver + Luv C++ Yt)
15. DFS, BFS, TopoSort
16. Shortest Path Algos (Dijkstra, Bellman Ford, Floyd Warshall)
17. MST (Prim’s & Kruskal)
18. Articulation Points & Bridges (very rarely asked)
19. Strongly Connected Components (Kosaraju’s Algo)
20. LCA (Binary Lifting)
21. Hamiltonian Path (directly asked in coding rounds)
22. Trie (Striver)
23. DSU (Striver + Luv C++ Yt )
24. SegTree (CodeNCode), Lazy Propagation(CodeNCode), Fenwick Tree (Luv C++)

Along with DSA, practicing questions on *LEETCODE* is a must. *Pick up a DSA sheet like STRIVER 450 DSA SHEET and solve it completely. Along with it you can complete the entire problem list of **InterviewBIT*.

*------------------------------------------------------------------------*

Try to reach an *EXPERT ON CODEFORCES & 1900+ rating on LEETCODE.* Boosts up the resume and once you are on this level, cracking a job in a big high paying MNC is not a big deal for you.

*IF YOU WANT TO BECOME REALLY GOOD AT CP, GO THROUGH CSES QUESTIONS LIST*

*Some questions & answers -*

*Q1. Did i solve all of them myself?*  
A. Yes and Yes, i did both CP & DSA, i solved around 1500+ questions combined of both. I've personally gone through a lot of other resources as well, but the ones that i have put here are the finest ones.

*Q2. Is doing all this worth it?*  
A. At the position I'm currently at, i can tell that every single minute that i dedicated to this is worth it. The salary that gets credited in my bank account at the end of every month is only cause I did all this hustle and hardwork.

*Q3. Question i receive a lot in DMs -> Im from Tier 3/Private college, can i still get a good placement?*

A. Yes you can, by believing that you cant grab a good placement you are actually finding excuses of not putting in efforts. I've seen Tier3 college students grabbing really good packages. You just have to work hard, you may not get the peer group that guys in Tier 1/2 colleges will get, but you can still work hard and get to their level by compensating the college drawback with good skills.

*Q4. Am i doing all this just cause i want to sell a course or earn money ?*  
A. Haha, nah i already earn enough and I'm writing this post just to help you folks grab good placements and improve the lifestyle of you and your families. My sole aim is to help all my juniors in their journey, so i can contribute back to the society.

*Q5. I have XYZ months left, what can i do now?*  
A. Just stop complaining and start practicing. Only you can help yourself. Noone is gonna come to save you once you are sitting in front of an interviewer.

*Q6. How much do I earn?* 

A. Good enough to be proud, low enough to keep hustling for more.



So now you folks dont have any excuse of not putting in efforts, you have all the required resources and the complete roadmap. JUST START PRACTICING.

To all the experienced folks, i tried to mention everything in this post, but if i still missed out on something, add your advice in the comment section. I ll include that in the post.

If any of you still have any queries, feel free to use the comment section.

*HAPPY CODING :*